permissions:
  id-token: write # required to use OIDC authentication
  contents: read # required to checkout the code from the repo

on:
  workflow_dispatch:
  push:
    branches:
    - dev

    paths:
    - src/BuildingBlocks/**
    - src/Services/Basket/**
    - .github/workflows/basket-api.yml
  
  #pull_request:
  #  branches:
  #  - dev

  #  paths:
  #  - src/BuildingBlocks/**
  #  - src/Services/Basket/**
  #  - .github/workflows/basket-api.yml
env:
  SERVICE: basket-api

jobs:

  BuildContainersForPR_Linux:
    runs-on: ubuntu-latest
    #if: ${{ github.event_name == 'pull_request' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    #- uses: ./.github/workflows/composite/build
    #  with:
    #    service: ${{ env.SERVICE }}
    #    registry_endpoint: ${{ secrets.REGISTRY_ENDPOINT }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
        role-duration-seconds: 900
        aws-region: eu-north-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: ${{ github.sha }}
        IMAGE: basket.api
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG . -f Services/Basket/Basket.API/Dockerfile
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      working-directory: ./src

#name: basket-api

#on:
#  workflow_dispatch:
#  push:
#    branches:
#    - dev

#    paths:
#    - src/BuildingBlocks/**
#    - src/Services/Basket/**
#    - .github/workflows/basket-api.yml
  
#  pull_request:
#    branches:
#    - dev

#    paths:
#    - src/BuildingBlocks/**
#    - src/Services/Basket/**
#    - .github/workflows/basket-api.yml
#env:
#  SERVICE: basket-api
#  IMAGE: basket.api

#jobs:

#  BuildContainersForPR_Linux:
#    runs-on: ubuntu-latest
#    if: ${{ github.event_name == 'pull_request' }}
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v2
#    - uses: ./.github/workflows/composite/build
#      with:
#        service: ${{ env.SERVICE }}
#        registry_endpoint: ${{ secrets.REGISTRY_ENDPOINT }}

#  BuildLinux:
#    runs-on: ubuntu-latest
#    if: ${{ github.event_name != 'pull_request' }}
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v2
#    - uses: ./.github/workflows/composite/build-push
#      with:
#        service: ${{ env.SERVICE }}
#        registry_host: ${{ secrets.REGISTRY_HOST }}
#        registry_endpoint: ${{ secrets.REGISTRY_ENDPOINT }}
#        image_name: ${{ env.IMAGE }}
#        registry_username: ${{ secrets.USERNAME }}
#        registry_password: ${{ secrets.PASSWORD }}